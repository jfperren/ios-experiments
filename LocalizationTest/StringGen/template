// 
//  FILE_NAME
//  PROJECT_NAME
//
//  Auto-generated by AUTHOR on MONTH/DAY/YEAR at HOUR:MINUTE
//  Copyright (c) YEAR TEAM. All rights reserved. 
//

import Foundation

enum ENUM_NAME: PROTOCOL_NAME {
    KEYS_STRING
}

// MARK: - String extension

extension String {
    
    init(key: PROTOCOL_NAME, comment: String = "") {

        var string = NSLocalizedString(key.rawValue, comment: comment)
        
        for (parameter, value) in key.parameters {
            string = string.replacingOccurrences(of: "{{\(parameter)}}", with: value)
        }
        
        self = string
    }
}

// MARK: - PROTOCOL_NAME

protocol PROTOCOL_NAME {
    
    /**
     String value of this key in `Localizable.strings`
    */
    var rawValue: String { get }
    
    /**
     Dictionary with all parameters associated with this key
    */
    var parameters: [String: String] { get }
    
}

extension PROTOCOL_NAME {
    
    var rawValue: String {
        return getRawValue(key: self)
    }
    
    var parameters: [String: String] {
        return getParameters(key: self)
    }
}

// MARK: - Helpers

fileprivate func getRawValue(key: PROTOCOL_NAME) -> String {

    switch key {
    RAW_VALUES_STRING
    default: return ""
    }
}

fileprivate func getParameters(key: PROTOCOL_NAME) -> [String: String] {

    switch key {
    PARAMETERS_STRING
    default: return [:]
    }
}
